export interface DriveConfigParams {
    googleAccessToken?: string;
    driveFolderName?: string;
    driveFileName?: string;
}
export interface AWSConfigParams {
    accessKeyId: string;
    secretAccesskey: string;
    signatureVersion: 'v4';
    bucket: string;
    fileName?: string;
}
export interface ConfigureParams {
    drive?: DriveConfigParams;
    AWS?: AWSConfigParams;
    numberOfShares?: number;
    threshold?: number;
}
export interface SplitKeyParams {
    secret: string;
    n: number;
    k: number;
}
export interface CombineKeyParams {
    keys: Array<string>;
}
export interface UploadParams extends ConfigureParams {
    privateKey: string;
}
export interface UploadKeyToDriveParams {
    secretPart: string;
    token: string;
    folderName: string;
    fileName: string;
}
export interface RecoveryParams extends ConfigureParams {
    recoveryShards?: string[];
}
export interface recoveryKeyFromDriveParams {
    token: string;
    folderName: string;
    fileName: string;
}
export declare type TokenType = {
    token: string;
};
export declare type CreateFolderType = TokenType & {
    folderName: string;
};
export declare type CreateFolderResponseType = {
    id: string;
    name: string;
};
export declare type CreateFileType = TokenType & {
    fileName: string;
    folderId?: string;
};
export declare type CreateFileResponseType = {
    id: string;
    name: string;
};
export declare type GetFolderType = TokenType;
export declare type GetFolderResponseType = Array<{
    id: string;
    name: string;
}>;
export declare type GetFileType = TokenType;
export declare type GetFileResponseType = Array<{
    id: string;
    name: string;
}>;
export declare type GetFileAndFolderType = TokenType;
export declare type GetFileAndFolderResponseType = Array<{
    id: string;
    name: string;
    type: 'file' | 'folder';
    isTrashed: boolean;
}>;
export declare type UpdateFileDataType = TokenType & {
    fileId: string;
    body: string;
};
export declare type UpdateFileDataResponseType = {
    id: string;
    name: string;
};
export declare type GetFileDataType = TokenType & {
    fileId: string;
};
export declare type GetFileDataResponseType = {
    data: string;
};
export interface UploadKeyToAWSParams extends AWSConfigParams {
    body: string;
    token: string;
}
export interface RecoverKeyFromAWSParams extends AWSConfigParams {
    token: string;
}
